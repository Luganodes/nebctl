---

- name: Adding node to admin panel and zip configs
  hosts: localhost
  tasks:
    - name: Creating node directory
      file:
        path: "{{ nebula_control_dir }}/hosts/{{ node_name }}"
        state: directory
      when: not update_config

    - name: Signing certificates
      command: nebula-cert sign -ca-key "{{ nebula_control_dir }}/ca/ca.key" --ca-crt "{{ nebula_control_dir }}/ca/ca.crt" -out-key "{{ nebula_control_dir }}/hosts/{{ node_name }}/host.key" -out-crt "{{ nebula_control_dir }}/hosts/{{ node_name }}/host.crt" -name "{{ node_name }}" -ip "{{ nebula_ip }}/16" -groups "{{ nebula_groups }}"
      when: not update_config

    - name: Generating node config with lighthouse hosts
      copy:
        src: "{{ node_config }}"
        dest: "{{ nebula_control_dir }}/hosts/{{ node_name }}/config.yml"
      when: not update_config

    - name: Generating temporary config directory name
      set_fact: 
        config_dir: "/tmp/nebctl-config-{{ query('community.general.random_string', upper=false, numbers=false, special=false)[0] }}"

    - name: Creating temporary config directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ config_dir }}"
        - "{{ config_dir }}/nebula"
        - "{{ config_dir }}/defaults"

    - name: saving user password
      copy:
        content: "{{ archive_password }}"
        dest: "{{ nebula_control_dir }}/hosts/{{ node_name }}/pwd"

    - name: Save pull url to file
      copy:
        content: "{{ pull_url }}"
        dest: "{{ nebula_control_dir }}/hosts/{{ node_name }}/pull_url"

    - name: Copying node configs
      synchronize:
        src: "{{ item }}"
        dest: "{{ config_dir }}/nebula"
      with_items:
        - "{{ nebula_control_dir }}/hosts/{{ node_name }}/config.yml"
        - "{{ nebula_control_dir }}/hosts/{{ node_name }}/host.crt"
        - "{{ nebula_control_dir }}/hosts/{{ node_name }}/host.key"
        - "{{ nebula_control_dir }}/hosts/{{ node_name }}/pwd"
        - "{{ nebula_control_dir }}/hosts/{{ node_name }}/pull_url"
        - "{{ nebula_control_dir }}/ca/ca.crt"

    - name: Copying service config
      copy:
        src: "{{ nebula_control_dir }}/defaults/nebula.service"
        dest: "{{ config_dir }}/defaults/nebula.service"
      when: not mac_os | bool
        
    - name: copying mac_os service config
      copy:
        src: "{{ nebula_control_dir }}/defaults/nebulad.plist"
        dest: "{{ config_dir }}/defaults/nebulad.plist"
      when: mac_os | bool

    - name: Copying network config
      copy:
        src: "{{ network_config }}"
        dest: "{{ config_dir }}/defaults/nebula1.network"
      when: not mac_os | bool

    - name: Copying network config
      copy:
        src: "{{ network_config }}"
        dest: "{{ config_dir }}/defaults/nebula"
      when: mac_os | bool

    - name: Zipping configs
      shell: "cd {{ config_dir }} && zip --password {{ archive_password }} -r {{ nebula_control_dir }}/hosts/{{ node_name }}/config.zip ./*"

    - name: copy zip to archive folder
      copy:
        src: "{{ nebula_control_dir }}/hosts/{{ node_name }}/config.zip"
        dest: "{{ nebula_control_dir }}/archive/{{ node_name }}.zip"
